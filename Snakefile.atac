#Snakemake ATAC processing pipeline
import os
import numpy as np
import pandas as pd
from os.path import join
from snakemake.utils import validate


validate(config, "conf/snareR.config.yaml") 
CURRENT_DIR = os.getcwd()

# read config parameters
FASTQ_DIR = config["fastq_dir"]
link_table = pd.read_table(config["link_table"], index_col=0)
ASSAY = config["assay_type"]

SAMPLES, = glob_wildcards(join(FASTQ_DIR, "{sample}_R1.fastq.gz"))
# Patterns for the 1st mate and the 2nd mate using the 'sample' wildcard.
PATTERN_R1 = '{sample}_R1.fastq.gz'
PATTERN_R2 = '{sample}_R2.fastq.gz'   #barcode
PATTERN_R3 = '{sample}_R3.fastq.gz'
# get sample name
SAMPLE_NAME = np.unique(np.array([re.sub(r'\..*', '', sample_name) for sample_name in SAMPLES])).tolist()
TISSUE = link_table.loc[link_table['Experiment_ID_Short'].isin(SAMPLE_NAME), 'Tissue']
TISSUE = np.unique(np.array(TISSUE)).tolist()

# functions
def get_sample_wildcards(wildcards):
    return expand('tmp/reports/{sample}.qc.report.html', sample=SAMPLES)

rule all:
    input:
        expand('tmp/snapTag/{sample}.R1.fastq', sample=SAMPLES),
        expand('tmp/bam/{sample}.bam', sample=SAMPLES),
        expand('tmp/bam/{sample}.sorted.bam', sample=SAMPLES),
        expand('tmp/bam/{sample}.sorted.bam.bai', sample=SAMPLES),
        expand('tmp/fragments/{sample}.fragements.sort.bed', sample=SAMPLES),
        expand('tmp/snap/{sample}.snap', sample=SAMPLES),
        expand('tmp/macs/{sample}.peaks.bed', sample=SAMPLES),
        expand('tmp/fastqFiles/{sample}_fastqc.zip', sample=SAMPLES),
        expand('tmp/reports/{sample}.qc.report.html', sample=SAMPLES),
        expand(join(ASSAY, "{tissue}/samples/{sample_name}/Sample_output/objects/{sample_name}.p2.obj.rds"), tissue=TISSUE, sample_name=SAMPLE_NAME),
        expand(join(ASSAY, '{tissue}/samples/{sample_name}/Sample_output/macs2/{sample_name}.combined.peaks.bed'), tissue=TISSUE, sample_name=SAMPLE_NAME),
        expand(join(ASSAY, "{tissue}/samples/{sample_name}/Sample_output/QCs/{sample_name}.qc.txt"), tissue=TISSUE, sample_name=SAMPLE_NAME),
        expand(join(ASSAY, "{tissue}/samples/{sample_name}/Sample_output/{sample_name}.qc.report.html"), tissue=TISSUE, sample_name=SAMPLE_NAME),
        expand(join(ASSAY, "{tissue}/samples/{sample_name}/Sample_output/dual_omics/{sample_name}.dual.report.html"), tissue=TISSUE, sample_name=SAMPLE_NAME)

include: "rules/snapTag_atac.smk"
include: "rules/snaptools_align.smk"
include: "rules/samtools_atac.smk"
include: "rules/sinto_atac.smk"
include: "rules/snap_pre.smk"
include: "rules/call_peaks_atac.smk"
include: "rules/QC_atac.smk"
include: "rules/merge_to_sampleLevel_atac.smk"
include: "rules/peakcalling_sampleLevel_atac.smk"
include: "rules/atat_sampleLevel_QC.smk"
include: "rules/dual_omics.smk"
